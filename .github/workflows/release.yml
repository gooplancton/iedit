name: Publish release for multiple platforms

on:
  push:
    branches: [master]

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build (linux)
        run: cargo build --workspace --release --locked

      - name: Upload linux binary
        uses: actions/upload-artifact@v4
        with:
          name: iedit-linux
          path: target/release/iedit*

  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add macOS aarch64 target
        run: rustup target add aarch64-apple-darwin

      - name: Build (macos aarch64)
        run: cargo build --workspace --release --target aarch64-apple-darwin --locked

      - name: Upload macos arm64 binary
        uses: actions/upload-artifact@v4
        with:
          name: iedit-macos-arm64
          path: target/aarch64-apple-darwin/release/iedit*

  build-macos-x86_64:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add macOS x86_64 target
        run: rustup target add x86_64-apple-darwin

      - name: Build (macos x86_64)
        run: cargo build --workspace --release --target x86_64-apple-darwin --locked

      - name: Upload macos x86_64 binary
        uses: actions/upload-artifact@v4
        with:
          name: iedit-macos-x86_64
          path: target/x86_64-apple-darwin/release/iedit*

  create-release:
    needs: [build-linux, build-macos-arm64, build-macos-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (for tag/version extraction)
        uses: actions/checkout@v4
      
      - name: Read version from iedit_editor/Cargo.toml
        id: tag
        run: |
          set -e
          CARGO_TOML="iedit_editor/Cargo.toml"
          ver=$(sed -n 's/^[[:space:]]*version[[:space:]]*=[[:space:]]*"\(.*\)"/\1/p' "$CARGO_TOML" | head -n1 || true)
          if [ -z "$ver" ]; then ver="0.0.0"; fi
          if [[ "$ver" == v* ]]; then TAG="$ver"; else TAG="v$ver"; fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$ver" >> $GITHUB_OUTPUT
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Rename binaries
        run: |
          mv artifacts/iedit-linux/iedit iedit-linux
          mv artifacts/iedit-macos-arm64/iedit iedit-macos-arm64
          mv artifacts/iedit-macos-x86_64/iedit iedit-macos-x86_64

      - name: Create GitHub release and attach artifacts
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          artifacts: "iedit-linux,iedit-macos-arm64,iedit-macos-x86_64"
          token: ${{ secrets.PAT }}